// schedulers/apScheduler.js
import cron from 'node-cron';
import ApModel from '../models/ApModel.js';

class ApScheduler {
    static init() {
        console.log('‚è∞ Initialisation du planificateur AP...');
        
        // V√©rification au d√©marrage (apr√®s 10 secondes)
        setTimeout(() => {
            this.checkOnStartup();
        }, 10000);
        
        // üìÖ V√©rification quotidienne √† 8h00, 12h00, 16h00
        cron.schedule('0 8,12,16 * * *', async () => {
            console.log('üïó [CRON] V√©rification automatique des AP en retard...');
            await this.checkOverdueAPs('programm√©e');
        });
        
        console.log('‚úÖ Planificateur AP initialis√© avec v√©rifications programm√©es');
    }
    
    static async checkOnStartup() {
        try {
            console.log('üöÄ V√©rification des AP en retard au d√©marrage du serveur...');
            const results = await ApModel.checkAndUpdateOverdueAPs();
            
            this.logResults('d√©marrage', results);
            
        } catch (error) {
            console.error('üí• Erreur lors de la v√©rification au d√©marrage:', error);
        }
    }
    
    static async checkOverdueAPs(type = 'automatique') {
        try {
            console.log(`üîç D√©but de la v√©rification ${type} des AP en retard...`);
            const results = await ApModel.checkAndUpdateOverdueAPs();
            
            this.logResults(type, results);
            
            return results;
        } catch (error) {
            console.error(`‚ùå Erreur lors de la v√©rification ${type}:`, error);
            throw error;
        }
    }
    
    static logResults(type, results) {
        const timestamp = new Date().toLocaleString('fr-FR');
        
        if (results.successfulUpdates > 0) {
            console.log(`üéâ [${timestamp}] V√©rification ${type} R√âUSSIE: ${results.successfulUpdates} AP(s) mis √† jour`);
        } else {
            console.log(`‚ÑπÔ∏è [${timestamp}] V√©rification ${type}: Aucun AP en retard trouv√©`);
        }
    }
}

export default ApScheduler;